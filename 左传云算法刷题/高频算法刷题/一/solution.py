# -*- encoding:utf-8 -*-

# 括号匹配
# 用 一个计数器进行统计，遇到（，+1
# 遇到），-1，在遍历过程中，计数器为负，则表明不匹配
# 遍历结束，判断计数器是否为0

# 括号匹配中的最长正确匹配长度

# 一个数组记录每一个字符结尾能够配到的最长有效括号字串长度
# 遇到（为0，遇到“）”，检查前一个字符配的长度，减去前一个配的长度-1，判断该字符是否和当前
# 字符匹配，若匹配，说明+2
# 此时还需要再检查前面的字符的有效长度，相加


# Q:给定一个数组，全是正数，请返回累加和为定值K的最长子数组长度
# A:左右两个指针，判断以每个数字开头的和为k的子数组长度，找出最大
# 左指针固定，有指针滑动，相等，记录长度。
# 大于K，左指针滑动，小于k，右指针滑动

# Q:给定一个数组，可正可负和0，判断累加和为定值K的最长子数组长度
# A：判断以每个数组元素开头，判断以每个数组元素结尾的和为k的最长子数组长度
# 累加数组中每一个元素的和，和不再字典中，更新，否则不跟新，将和放进字典中作为键，索引作为值。
# 从字典中取出当前Sum-K最早出现的地方，当前索引-该索引为长度
# 注意需要将和为0的时候，赋值为1

# Q:给定一个数组，值可正可负和0，请返回和小于等于K的最长子数组长度
# A: 当前数组元素向后加能加到的最小数组元素如果>k,则一定不会满足要求
# B： 当前数组元素向后能加的最小数组元素< K,则判断下一个元素能够累加到的最小和与之相加是否继续<K,若是，则继续
# 否则，之前的就是所能累加的最长子数组
# 当进行下一个数组元素计算累计和，可以用之前累计的和-之前开头元素，加速过程
# 